# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/7285deb7-1423-4925-8d25-6ae104d69484";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-a9174fbe-c0be-4763-9c69-b4bd7b76b432".device = "/dev/disk/by-uuid/a9174fbe-c0be-4763-9c69-b4bd7b76b432";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/28D2-DB1A";
      fsType = "vfat";
    };

  fileSystems."/Data" =
    { device = "/dev/disk/by-uuid/719047aa-e666-4f8e-a538-4224fbdff938";
      fsType = "xfs";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/eb8fe298-f56b-456f-9296-5cf678bb1241"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
